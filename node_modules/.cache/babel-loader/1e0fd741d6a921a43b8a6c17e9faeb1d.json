{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport Emit from './utils/EventBus';\nwindow._APP_ID = 'routertest';\n\nvar _CHANNEL = require('./assets/json/channel.json');\n\nvar _APITIPS = require('./assets/json/tips.json');\n\nvar _LANGUAG = require('./assets/json/language.json');\n\nvar Config = /*#__PURE__*/function () {\n  function Config() {\n    _classCallCheck(this, Config);\n  }\n\n  _createClass(Config, null, [{\n    key: \"getServerApi\",\n    value: function getServerApi() {\n      if (this.isInapp()) {\n        return this.APPCONFIG.RELEASE ? this.APPCONFIG.RELEASE_DOMAIN : this.APPCONFIG.TEST_DOMAIN;\n      } else {\n        return window.location.protocol + '//' + window.location.host + '/';\n      }\n    }\n  }, {\n    key: \"getApiTips\",\n    value: function getApiTips(code, type) {\n      return this.APITIPS[code] ? this.APITIPS[code][type || 'zh'] : code;\n    }\n  }, {\n    key: \"setApiTips\",\n    value: function setApiTips(data) {\n      this.APITIPS = data;\n    }\n  }, {\n    key: \"getAppTheme\",\n    value: function getAppTheme() {\n      return window.document.body.className.replace('theme-', '');\n    }\n  }, {\n    key: \"setAppTheme\",\n    value: function setAppTheme(name) {\n      var _this = this;\n\n      var _currname = this.getAppTheme();\n\n      if (_currname === name) {\n        return;\n      }\n\n      var _broadcast = function _broadcast() {\n        Emit.exe({\n          theme: _this.GLOBAL_EVENT,\n          type: _this.GLOBAL_EVENT_TYPE.STYLE_THEME_CHANGE,\n          name: _this.getAppTheme()\n        });\n      };\n\n      switch (name) {\n        case 'light':\n          {\n            window.document.body.className = 'theme-light';\n            this.Theme.color = Object.assign({}, this.Theme.light);\n\n            _broadcast();\n\n            break;\n          }\n\n        case 'dark':\n          {\n            window.document.body.className = 'theme-dark';\n            this.Theme.color = Object.assign({}, this.Theme.dark);\n\n            _broadcast();\n\n            break;\n          }\n\n        case 'user':\n          {\n            window.document.body.className = 'theme-user';\n            this.Theme.color = Object.assign({}, this.Theme.user);\n\n            _broadcast();\n\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"getLanguage\",\n    value: function getLanguage(name) {\n      switch (name) {\n        case 'en':\n          {\n            return this.LANGUAG.en;\n          }\n\n        case 'cn':\n          {\n            return this.LANGUAG.cn;\n          }\n\n        default:\n          {\n            return this.LANGUAG.cn;\n          }\n      }\n    }\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(name) {\n      this.LANGUAG_USE = this.getLanguage(name || this.getParam('language'));\n    }\n  }, {\n    key: \"setAppConfig\",\n    value: function setAppConfig(name) {\n      var _data = this.CHANNEL[name || window._APP_ID];\n\n      if (_data) {\n        this.APPCONFIG = Object.assign(this.APPCONFIG, _data);\n      }\n\n      this.SERVER_API = this.getServerApi();\n    }\n  }, {\n    key: \"bindWindow\",\n    value: function bindWindow() {\n      var _this2 = this;\n\n      window._NativeBackEventHandle = function () {\n        Emit.exe({\n          theme: _this2.GLOBAL_EVENT,\n          type: _this2.GLOBAL_EVENT_TYPE.NATIVE_BACK_EVENT\n        });\n      };\n\n      window._ReatConfig = Config;\n    }\n  }, {\n    key: \"isInapp\",\n    value: function isInapp() {\n      var name = window.location.hostname;\n\n      if (name === '127.0.0.1' || name === 'localhost') {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getParam\",\n    value: function getParam(name) {\n      var searchIndex = 0,\n          url = window.location.href;\n\n      for (var i = 0; i < url.length; i++) {\n        if (url[i] === '?') {\n          searchIndex = i;\n          break;\n        }\n      }\n\n      var reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)');\n      var r = url.substr(searchIndex).substr(1).match(reg);\n      if (r != null) return unescape(r[2]);\n      return null;\n    }\n  }]);\n\n  return Config;\n}();\n\nConfig.APPCONFIG = {\n  APP_ID: window._APP_ID,\n  APP_NAME: 'RouterTest',\n  APP_VERSION: 121004005,\n  RELEASE: false,\n  RELEASE_DOMAIN: 'https://pjd.bctt.cc/',\n  TEST_DOMAIN: 'https://pjd.bctt.cc/'\n};\nConfig.CHANNEL = _CHANNEL;\nConfig.APITIPS = _APITIPS;\nConfig.LANGUAG = _LANGUAG;\nConfig.LANGUAG_USE = _LANGUAG.cn;\nConfig.SERVER_API = null;\nConfig.GLOBAL_EVENT = './_BASE_GLOBAL_THEME/';\nConfig.GLOBAL_EVENT_TYPE = {\n  STYLE_THEME_CHANGE: 'STYLE_THEME_CHANGE',\n  NATIVE_BACK_EVENT: 'NATIVE_BACK_EVENT'\n};\nConfig.Theme = {\n  toolbar: {\n    height: 45\n  },\n  color: {\n    theme: 'rgb(218,128,88)',\n    font: 'rgb(0,0,0)',\n    font_anti: 'rgb(205,205,205)' // 反差抵抗字体\n\n  },\n  light: {\n    theme: 'rgb(218,128,88)',\n    font: 'rgb(0,0,0)',\n    font_anti: 'rgb(205,205,205)'\n  },\n  dark: {\n    theme: 'rgb(204,163,82)',\n    font: 'rgb(245,245,245)',\n    font_anti: 'rgb(0,0,0)'\n  },\n  user: {\n    theme: 'rgb(204,163,82)',\n    font: 'rgb(0,0,0)',\n    font_anti: 'rgb(205,205,205)'\n  }\n};\nimport('./testing').then(function (data) {\n  window._ReactTesting = data.default;\n});\nexport default Config;","map":{"version":3,"sources":["C:/Users/elandtong/Desktop/ReactElandFramework/src/config.js"],"names":["Emit","window","_APP_ID","_CHANNEL","require","_APITIPS","_LANGUAG","Config","isInapp","APPCONFIG","RELEASE","RELEASE_DOMAIN","TEST_DOMAIN","location","protocol","host","code","type","APITIPS","data","document","body","className","replace","name","_currname","getAppTheme","_broadcast","exe","theme","GLOBAL_EVENT","GLOBAL_EVENT_TYPE","STYLE_THEME_CHANGE","Theme","color","Object","assign","light","dark","user","LANGUAG","en","cn","LANGUAG_USE","getLanguage","getParam","_data","CHANNEL","SERVER_API","getServerApi","_NativeBackEventHandle","NATIVE_BACK_EVENT","_ReatConfig","hostname","searchIndex","url","href","i","length","reg","RegExp","r","substr","match","unescape","APP_ID","APP_NAME","APP_VERSION","toolbar","height","font","font_anti","then","_ReactTesting","default"],"mappings":"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","sourcesContent":["import Emit from './utils/EventBus'\r\n\r\nwindow._APP_ID = 'routertest'\r\n\r\nconst _CHANNEL = require('./assets/json/channel.json')\r\nconst _APITIPS = require('./assets/json/tips.json')\r\nconst _LANGUAG = require('./assets/json/language.json')\r\n\r\nclass Config {\r\n    static APPCONFIG = {\r\n        APP_ID: window._APP_ID, APP_NAME: 'RouterTest', APP_VERSION: 121004005,\r\n        RELEASE: false,\r\n        RELEASE_DOMAIN: 'https://pjd.bctt.cc/',\r\n        TEST_DOMAIN: 'https://pjd.bctt.cc/'\r\n    }\r\n\r\n    static CHANNEL = _CHANNEL\r\n    static APITIPS = _APITIPS\r\n    static LANGUAG = _LANGUAG\r\n    static LANGUAG_USE = _LANGUAG.cn\r\n\r\n    static SERVER_API = null\r\n\r\n    static GLOBAL_EVENT = './_BASE_GLOBAL_THEME/'\r\n    static GLOBAL_EVENT_TYPE = {\r\n        STYLE_THEME_CHANGE: 'STYLE_THEME_CHANGE',\r\n        NATIVE_BACK_EVENT: 'NATIVE_BACK_EVENT'\r\n    }\r\n\r\n    static Theme = {\r\n        toolbar: {\r\n            height: 45\r\n        },\r\n        color: {\r\n            theme: 'rgb(218,128,88)',\r\n            font: 'rgb(0,0,0)',\r\n            font_anti: 'rgb(205,205,205)' // 反差抵抗字体\r\n        },\r\n        light: {\r\n            theme: 'rgb(218,128,88)',\r\n            font: 'rgb(0,0,0)',\r\n            font_anti: 'rgb(205,205,205)'\r\n        },\r\n        dark: {\r\n            theme: 'rgb(204,163,82)',\r\n            font: 'rgb(245,245,245)',\r\n            font_anti: 'rgb(0,0,0)'\r\n        },\r\n        user: {\r\n            theme: 'rgb(204,163,82)',\r\n            font: 'rgb(0,0,0)',\r\n            font_anti: 'rgb(205,205,205)'\r\n        }\r\n    }\r\n\r\n    static getServerApi() {\r\n        if (this.isInapp()) {\r\n            return this.APPCONFIG.RELEASE ? this.APPCONFIG.RELEASE_DOMAIN : this.APPCONFIG.TEST_DOMAIN\r\n        } else {\r\n            return window.location.protocol + '//' + window.location.host + '/'\r\n        }\r\n    }\r\n\r\n    static getApiTips(code, type) {\r\n        return this.APITIPS[code] ? this.APITIPS[code][type || 'zh'] : code\r\n    }\r\n\r\n    static setApiTips(data) {\r\n        this.APITIPS = data\r\n    }\r\n\r\n    static getAppTheme() {\r\n        return window.document.body.className.replace('theme-', '')\r\n    }\r\n\r\n    static setAppTheme(name) {\r\n        let _currname = this.getAppTheme()\r\n\r\n        if (_currname === name) {\r\n            return\r\n        }\r\n\r\n        let _broadcast = () => {\r\n            Emit.exe({\r\n                theme: this.GLOBAL_EVENT,\r\n                type: this.GLOBAL_EVENT_TYPE.STYLE_THEME_CHANGE,\r\n                name: this.getAppTheme()\r\n            })\r\n        }\r\n\r\n        switch (name) {\r\n            case 'light': {\r\n                window.document.body.className = 'theme-light'\r\n                this.Theme.color = Object.assign({}, this.Theme.light)\r\n                _broadcast()\r\n                break\r\n            }\r\n            case 'dark': {\r\n                window.document.body.className = 'theme-dark'\r\n                this.Theme.color = Object.assign({}, this.Theme.dark)\r\n                _broadcast()\r\n                break\r\n            }\r\n            case 'user': {\r\n                window.document.body.className = 'theme-user'\r\n                this.Theme.color = Object.assign({}, this.Theme.user)\r\n                _broadcast()\r\n                break\r\n            }\r\n            default: {\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    static getLanguage(name) {\r\n        switch (name) {\r\n            case 'en': {\r\n                return this.LANGUAG.en\r\n            }\r\n            case 'cn': {\r\n                return this.LANGUAG.cn\r\n            }\r\n            default: {\r\n                return this.LANGUAG.cn\r\n            }\r\n        }\r\n    }\r\n\r\n    static setLanguage(name) {\r\n        this.LANGUAG_USE = this.getLanguage(name || this.getParam('language'))\r\n    }\r\n\r\n    static setAppConfig(name) {\r\n        let _data = this.CHANNEL[name || window._APP_ID]\r\n\r\n        if (_data) {\r\n            this.APPCONFIG = Object.assign(this.APPCONFIG, _data)\r\n        }\r\n\r\n        this.SERVER_API = this.getServerApi()\r\n    }\r\n\r\n    static bindWindow() {\r\n        window._NativeBackEventHandle = () => {\r\n            Emit.exe({\r\n                theme: this.GLOBAL_EVENT,\r\n                type: this.GLOBAL_EVENT_TYPE.NATIVE_BACK_EVENT\r\n            })\r\n        }\r\n\r\n        window._ReatConfig = Config\r\n    }\r\n\r\n    static isInapp() {\r\n        let name = window.location.hostname\r\n\r\n        if (name === '127.0.0.1' || name === 'localhost') {\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    static getParam(name) {\r\n        let searchIndex = 0, url = window.location.href\r\n\r\n        for (let i = 0; i < url.length; i++) {\r\n            if (url[i] === '?') {\r\n                searchIndex = i\r\n                break\r\n            }\r\n        }\r\n\r\n        let reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)')\r\n        let r = url.substr(searchIndex).substr(1).match(reg)\r\n\r\n        if (r != null) return unescape(r[2])\r\n\r\n        return null\r\n    }\r\n}\r\n\r\nimport('./testing').then(data => {\r\n    window._ReactTesting = data.default\r\n})\r\n\r\nexport default Config\r\n"]},"metadata":{},"sourceType":"module"}