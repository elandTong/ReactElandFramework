{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _get from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\src\\\\modal\\\\Spiner.jsx\";\nimport React from 'react';\nimport GridLoader from 'react-spinners/GridLoader';\nimport '../assets/style/comp.spiner.scss';\nimport Config from '../config';\nimport BaseModal from '../router/BaseModal';\nimport { ModalPage } from '../router/Page';\n\nvar Spiner = /*#__PURE__*/function (_BaseModal) {\n  _inherits(Spiner, _BaseModal);\n\n  var _super = _createSuper(Spiner);\n\n  function Spiner(props) {\n    var _this;\n\n    _classCallCheck(this, Spiner);\n\n    _this = _super.call(this, props);\n    _this.touchclose = false;\n    _this.state = {\n      loading: true,\n      theme: Config.Theme.color.theme,\n      text: 'hello spiner!'\n    };\n    return _this;\n  }\n\n  _createClass(Spiner, [{\n    key: \"onData\",\n    value: function onData(data) {\n      _get(_getPrototypeOf(Spiner.prototype), \"onData\", this).call(this, data);\n\n      console.warn('modal spiner on data', data);\n    }\n  }, {\n    key: \"onCreate\",\n    value: function onCreate(props) {\n      _get(_getPrototypeOf(Spiner.prototype), \"onCreate\", this).call(this, props);\n\n      console.warn('modal spiner on create!');\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      console.warn('modal spiner on start!');\n    }\n  }, {\n    key: \"onResume\",\n    value: function onResume() {\n      console.warn('modal spiner on resume!');\n    }\n  }, {\n    key: \"onPause\",\n    value: function onPause() {\n      console.warn('modal spiner on pause!');\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop() {\n      console.warn('modal spiner on stop!');\n    }\n  }, {\n    key: \"onAppThemeChange\",\n    value: function onAppThemeChange(name, data) {\n      _get(_getPrototypeOf(Spiner.prototype), \"onAppThemeChange\", this).call(this, name, data);\n\n      this.setState({\n        theme: Config.Theme.color.theme\n      });\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      var touchclose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this.touchclose = touchclose;\n      this.setState({\n        text: text || this.state.text\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.finish();\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent(_ref) {\n      var _this2 = this;\n\n      var theme = _ref.theme,\n          language = _ref.language,\n          getapp = _ref.getapp;\n      return /*#__PURE__*/React.createElement(ModalPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'display-center comp-spiner-root',\n        onClick: function onClick(e) {\n          if (_this2.touchclose) {\n            _this2.close();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'display-column comp-spiner-cont',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(GridLoader, {\n        size: 20,\n        margin: 0,\n        color: this.state.theme,\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: 'comp-spiner-text',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, this.state.text))));\n    }\n  }]);\n\n  return Spiner;\n}(BaseModal);\n\nSpiner._path = '/spiner';\nexport default Spiner;","map":{"version":3,"sources":["C:/Users/elandtong/Desktop/ReactElandFramework/src/modal/Spiner.jsx"],"names":["React","GridLoader","Config","BaseModal","ModalPage","Spiner","props","touchclose","state","loading","theme","Theme","color","text","data","console","warn","name","setState","finish","language","getapp","e","close","_path"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;IAEMC,M;;;;;AAKF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AADe,UAFnBC,UAEmB,GAFN,KAEM;AAGf,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,KAAK,EAAER,MAAM,CAACS,KAAP,CAAaC,KAAb,CAAmBF,KAFjB;AAGTG,MAAAA,IAAI,EAAE;AAHG,KAAb;AAHe;AAQlB;;;;2BAEMC,I,EAAM;AACT,yEAAaA,IAAb;;AAEAC,MAAAA,OAAO,CAACC,IAAR,CAAa,sBAAb,EAAqCF,IAArC;AACH;;;6BAEQR,K,EAAO;AACZ,2EAAeA,KAAf;;AAEAS,MAAAA,OAAO,CAACC,IAAR,CAAa,yBAAb;AACH;;;8BAES;AACND,MAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb;AACH;;;+BAEU;AACPD,MAAAA,OAAO,CAACC,IAAR,CAAa,yBAAb;AACH;;;8BAES;AACND,MAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb;AACH;;;6BAEQ;AACLD,MAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACH;;;qCAEgBC,I,EAAMH,I,EAAM;AACzB,mFAAuBG,IAAvB,EAA6BH,IAA7B;;AAEA,WAAKI,QAAL,CAAc;AACVR,QAAAA,KAAK,EAAER,MAAM,CAACS,KAAP,CAAaC,KAAb,CAAmBF;AADhB,OAAd;AAGH;;;4BAEOG,I,EAA0B;AAAA,UAApBN,UAAoB,uEAAP,KAAO;AAC9B,WAAKA,UAAL,GAAkBA,UAAlB;AAEA,WAAKW,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEA,IAAI,IAAI,KAAKL,KAAL,CAAWK;AAA3B,OAAd;AACH;;;4BAEO;AACJ,WAAKM,MAAL;AACH;;;wCAE0C;AAAA;;AAAA,UAA3BT,KAA2B,QAA3BA,KAA2B;AAAA,UAApBU,QAAoB,QAApBA,QAAoB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACvC,0BACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAE,iCAAhB;AAAmD,QAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AAC/D,cAAI,MAAI,CAACf,UAAT,EAAqB;AACjB,YAAA,MAAI,CAACgB,KAAL;AACH;AACJ,SAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI;AAAK,QAAA,SAAS,EAAE,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AACI,QAAA,IAAI,EAAE,EADV;AAEI,QAAA,MAAM,EAAE,CAFZ;AAGI,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE,KAHtB;AAII,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAQI;AAAM,QAAA,SAAS,EAAE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWK,IADhB,CARJ,CALJ,CADJ,CADJ;AAsBH;;;;EApFgBV,S;;AAAfE,M,CACKmB,K,GAAQ,S;AAsFnB,eAAenB,MAAf","sourcesContent":["import React from 'react'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport '../assets/style/comp.spiner.scss'\r\nimport Config from '../config'\r\nimport BaseModal from '../router/BaseModal'\r\nimport { ModalPage } from '../router/Page'\r\n\r\nclass Spiner extends BaseModal {\r\n    static _path = '/spiner'\r\n\r\n    touchclose = false\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            loading: true,\r\n            theme: Config.Theme.color.theme,\r\n            text: 'hello spiner!'\r\n        }\r\n    }\r\n\r\n    onData(data) {\r\n        super.onData(data)\r\n\r\n        console.warn('modal spiner on data', data)\r\n    }\r\n\r\n    onCreate(props) {\r\n        super.onCreate(props)\r\n\r\n        console.warn('modal spiner on create!')\r\n    }\r\n\r\n    onStart() {\r\n        console.warn('modal spiner on start!')\r\n    }\r\n\r\n    onResume() {\r\n        console.warn('modal spiner on resume!')\r\n    }\r\n\r\n    onPause() {\r\n        console.warn('modal spiner on pause!')\r\n    }\r\n\r\n    onStop() {\r\n        console.warn('modal spiner on stop!')\r\n    }\r\n\r\n    onAppThemeChange(name, data) {\r\n        super.onAppThemeChange(name, data)\r\n\r\n        this.setState({\r\n            theme: Config.Theme.color.theme\r\n        })\r\n    }\r\n\r\n    setText(text, touchclose = false) {\r\n        this.touchclose = touchclose\r\n\r\n        this.setState({ text: text || this.state.text })\r\n    }\r\n\r\n    close() {\r\n        this.finish()\r\n    }\r\n\r\n    renderContent({ theme, language, getapp }) {\r\n        return (\r\n            <ModalPage>\r\n                <div className={'display-center comp-spiner-root'} onClick={(e) => {\r\n                    if (this.touchclose) {\r\n                        this.close()\r\n                    }\r\n                }}>\r\n                    <div className={'display-column comp-spiner-cont'}>\r\n                        <GridLoader\r\n                            size={20}\r\n                            margin={0}\r\n                            color={this.state.theme}\r\n                            loading={this.state.loading}\r\n                        />\r\n\r\n                        <span className={'comp-spiner-text'}>\r\n                            {this.state.text}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </ModalPage>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Spiner\r\n"]},"metadata":{},"sourceType":"module"}