{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\elandtong\\\\Desktop\\\\ReactElandFramework\\\\src\\\\screen\\\\Login.jsx\";\nimport React from 'react';\nimport Popup from '../modal/Popup';\nimport Toast from '../modal/Toast';\nimport BaseScreen from \"../router/BaseScreen\";\nimport { ScreenPage } from \"../router/Page\";\nimport Button from '../widget/Button';\nimport MessageNotice from '../widget/MessageNotice';\nimport APPContext from '../APPContext';\n\nvar Login = /*#__PURE__*/function (_BaseScreen) {\n  _inherits(Login, _BaseScreen);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.renderContent = _this.renderContent.bind(_assertThisInitialized(_this));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"onCreate\",\n    value: function onCreate(props) {\n      _get(_getPrototypeOf(Login.prototype), \"onCreate\", this).call(this, props);\n\n      console.warn('screen login on create!');\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      console.warn('screen login on start!');\n    }\n  }, {\n    key: \"onResume\",\n    value: function onResume() {\n      console.warn('screen login on resume!');\n    }\n  }, {\n    key: \"onPause\",\n    value: function onPause() {\n      console.warn('screen login on pause!');\n    }\n  }, {\n    key: \"onStop\",\n    value: function onStop() {\n      console.warn('screen login on stop!');\n    }\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      _get(_getPrototypeOf(Login.prototype), \"onData\", this).call(this, data);\n\n      console.warn('screen login on data', data);\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent(_ref) {\n      var _this2 = this;\n\n      var theme = _ref.theme,\n          language = _ref.language,\n          getapp = _ref.getapp;\n      return /*#__PURE__*/React.createElement(ScreenPage, {\n        opts: {\n          toolbar: {\n            title: 'LoginTitle',\n            hideBack: false,\n            hideMenu: false,\n            onBack: function onBack(e) {\n              _this2.finish();\n            },\n            onMenu: function onMenu(e) {\n              _this2.navigationModal(Popup._path, null, function (comp) {\n                comp.onComp( /*#__PURE__*/React.createElement(MessageNotice, {\n                  opts: {\n                    title: '标题',\n                    content: _this2._indata.message,\n                    onSure: function onSure(e) {\n                      comp.close();\n                    }\n                  },\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 33\n                  }\n                }), {\n                  width: MessageNotice._size.w,\n                  height: MessageNotice._size.h,\n                  angleClose: false,\n                  outClose: false,\n                  pos: {\n                    align: 'center',\n                    left: 10,\n                    top: 10\n                  },\n                  onClose: function onClose(e) {\n                    _this2.showPopup('popupId1');\n\n                    setTimeout(function () {\n                      _this2.closePopup('popupId1');\n                    }, 3000);\n                  }\n                });\n              });\n\n              _this2.navigationModal(Toast._path, null, function (comp) {\n                comp.setText(_this2._indata.message);\n              });\n            }\n          },\n          hideToolbar: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        opts: {\n          width: 120,\n          name: '按钮1号',\n          onClick: function onClick(e) {}\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, \" \", 'Login page', \" \"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(APPContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, this.renderContent);\n    }\n  }]);\n\n  return Login;\n}(BaseScreen);\n\nLogin._path = './Login';\nexport default Login;","map":{"version":3,"sources":["C:/Users/elandtong/Desktop/ReactElandFramework/src/screen/Login.jsx"],"names":["React","Popup","Toast","BaseScreen","ScreenPage","Button","MessageNotice","APPContext","Login","props","renderContent","bind","state","console","warn","data","theme","language","getapp","toolbar","title","hideBack","hideMenu","onBack","e","finish","onMenu","navigationModal","_path","comp","onComp","content","_indata","message","onSure","close","width","_size","w","height","h","angleClose","outClose","pos","align","left","top","onClose","showPopup","setTimeout","closePopup","setText","hideToolbar","name","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Popup from '../modal/Popup';\r\nimport Toast from '../modal/Toast';\r\nimport BaseScreen from \"../router/BaseScreen\";\r\nimport { ScreenPage } from \"../router/Page\";\r\nimport Button from '../widget/Button';\r\nimport MessageNotice from '../widget/MessageNotice';\r\nimport APPContext from '../APPContext';\r\n\r\nclass Login extends BaseScreen {\r\n    static _path = './Login'\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.renderContent = this.renderContent.bind(this)\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onCreate(props) {\r\n        super.onCreate(props)\r\n\r\n        console.warn('screen login on create!')\r\n    }\r\n\r\n    onStart() {\r\n        console.warn('screen login on start!')\r\n    }\r\n\r\n    onResume() {\r\n        console.warn('screen login on resume!')\r\n    }\r\n\r\n    onPause() {\r\n        console.warn('screen login on pause!')\r\n    }\r\n\r\n    onStop() {\r\n        console.warn('screen login on stop!')\r\n    }\r\n\r\n    onData(data) {\r\n        super.onData(data)\r\n\r\n        console.warn('screen login on data', data)\r\n    }\r\n\r\n    renderContent({ theme, language, getapp }) {\r\n        return (\r\n            <ScreenPage opts={{\r\n                toolbar: {\r\n                    title: 'LoginTitle',\r\n                    hideBack: false,\r\n                    hideMenu: false,\r\n                    onBack: (e) => {\r\n                        this.finish()\r\n                    },\r\n                    onMenu: (e) => {\r\n                        this.navigationModal(Popup._path, null, (comp) => {\r\n                            comp.onComp((\r\n                                <MessageNotice opts={{\r\n                                    title: '标题',\r\n                                    content: this._indata.message,\r\n                                    onSure: (e) => {\r\n                                        comp.close()\r\n                                    }\r\n                                }} />\r\n                            ), {\r\n                                width: MessageNotice._size.w,\r\n                                height: MessageNotice._size.h,\r\n                                angleClose: false,\r\n                                outClose: false,\r\n                                pos: {\r\n                                    align: 'center',\r\n                                    left: 10, top: 10\r\n                                },\r\n                                onClose: (e) => {\r\n                                    this.showPopup('popupId1')\r\n\r\n                                    setTimeout(() => {\r\n                                        this.closePopup('popupId1')\r\n                                    }, 3000)\r\n                                }\r\n                            })\r\n                        })\r\n\r\n                        this.navigationModal(Toast._path, null, (comp) => {\r\n                            comp.setText(this._indata.message)\r\n                        })\r\n                    }\r\n                },\r\n                hideToolbar: false\r\n            }}>\r\n                <Button opts={{\r\n                    width: 120,\r\n                    name: '按钮1号',\r\n                    onClick: (e) => {\r\n                    }\r\n                }} />\r\n                <span> {'Login page'} </span>\r\n            </ScreenPage>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <APPContext.Consumer>\r\n                {this.renderContent}\r\n            </APPContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}